Тестовое задание C# WPF

Требуется разработать приложение лаунчер для Notepad. Лаунчер должен
содержать несколько иконок (трех будет достаточно), где каждая иконка
должна открывать Notepad с файлами a.txt, b.txt и c.txt
соответственно.

Под иконкой понимать виджет с, возможно, какой-либо дополнительной
информацией и кнопкой «Закрыть».

К программе предъявляются следующие требования:

Иконка должна иметь индикацию того, что документ уже открыт;
Не позволять открыть (через иконку) более одного экземпляра
конкретного файла (те если у нас уже открыт, то лаунчер не откроет его
повторно);
Свои действия программа пишет в txt файл лога;
После закрытия лаунчера все запущенные им программы закрываются;
Лаунчер может закрыть запущенаю им программу в принудительном порядке;
Лаунчер корректно обрабатывает закрытие программы пользователем
(меняет статус иконки в интерфейсе).

Дополнительным плюсом будет добавление кнопки «Создать виджет» которая
создаст форму выбора файла который откроется в Notepad, после чего
создаст новый виджет в списке.




Описание проекта:
1) Custom Controls — папка с пользовательским контролом (Виджет)
2) Icons — иконки к пользовательскому контролу (Виджет)
3) Models — папка с одной моделью класса FileItem
4) JsonWorker — .cs файл (статический класс для работы с JSON-форматом)

Приложение было реализовано в VS 2015 Enterprise, .NET Framework 4.5.2.
В проекте в папке Debug отсутстувует JSON-файл (FileItems.json).
WPF-приложение предусматривает создание JSON-файла (FileItems.json).

Также в файле MainWindow.xaml.cs в конструкторе класса MainWindow
оставил подробные комментарии по поводу вариации работы WPF-приложения,
когда JSON-файл существует в папке Debug.